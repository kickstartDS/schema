openapi: '3.0.2'
info:
  title: Uniform Canvas API Types
  version: '1.0'
  # note: this is named 'uniform' so that it sorts AFTER the swagger.yml
  # so that it does not take over the version and title when it's merged
paths: {}
components:
  schemas:
    # Component Definition Types
    PublicIdProperty:
      description: Public ID (used in code). Do not change after creation.
      type: string
      minLength: 1
      maxLength: 36
      pattern: '^[a-zA-Z0-9-_]+$'

    ComponentDefinitionParameter:
      type: object
      description: The definition of a component parameter
      required:
        - id
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/PublicIdProperty'
        name:
          type: string
          description: Friendly name of the parameter
          maxLength: 100
          minLength: 1
        helpText:
          type: string
          description: Appears next to the parameter in the Composition editor
          maxLength: 128
          minLength: 0
        type:
          type: string
          description: Type name of the parameter (provided by a Uniform integration)
          maxLength: 50
          minLength: 1
        typeConfig:
          description: The configuration object for the type (type-specific)
      additionalProperties: false

    ComponentDefinitionSlot:
      type: object
      description: The definition of a named component slot that can contain other components
      required:
        - id
        - name
        - inheritAllowedComponents
        - allowedComponents
      properties:
        id:
          $ref: '#/components/schemas/PublicIdProperty'
        name:
          type: string
          description: Friendly name of the slot
          maxLength: 100
          minLength: 1
        allowedComponents:
          type: array
          description: A list of component definition public IDs that are allowed in this named slot
          items:
            type: string
            maxLength: 36
        inheritAllowedComponents:
          type: boolean
          description: Whether this slot inherits its allowed components from the parent slot it lives in. If true, allowedComponents is irrelevant.
          default: false
        minComponents:
          type: integer
          description: Minimum valid number of components in this slot
          maximum: 2147483647
        maxComponents:
          type: integer
          description: Maximum valid number of components in this slot
          maximum: 2147483647
      additionalProperties: false

    ComponentDefinitionSlugSettings:
      type: object
      description: The definition of a composition's slug settings
      properties:
        required:
          type: string
          description: |
            Whether the slug is required
            no: slug is optional
            yes: slug is required
            disabled: slug is disabled and will not be shown in the editor
          default: no
          enum:
            - no
            - yes
            - disabled
        unique:
          type: string
          description: |
            Slug uniqueness configuration.
            no = no unique constraint
            local = must be unique within this component type
            global = must be unique across all component types
          enum:
            - no
            - local
            - global
        regularExpression:
          type: string
          description: Regular expression slugs must match
        regularExpressionMessage:
          type: string
          description: |
            Custom error message when regular expression validation fails.
            Has no effect if `regularExpression` is not set.

    ComponentDefinitionVariant:
      type: object
      description: The definition of a component variant
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/PublicIdProperty'
        name:
          type: string
          description: Friendly name of the variant
          maxLength: 100
          minLength: 1
      additionalProperties: false

    ComponentDefinitionPermission:
      type: object
      description: Permission set for a component defintion
      required:
        - roleId
        - permission
        - state
      properties:
        roleId:
          $ref: '#/components/schemas/PublicIdProperty'
        permission:
          type: string
          description: |
            Permission type for this permission ComponentDefinition:
            read | write | create | delete
          enum:
            - read
            - write
            - create
            - delete
        state:
          type: integer
          description: State of the component that this permission applies to
          maximum: 64
          minimum: 0
      additionalProperties: false

    ComponentDefinition:
      type: object
      description: Defines a component type that can live on a Composition
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/PublicIdProperty'
        name:
          type: string
          description: Friendly name of the component definition
          maxLength: 100
          minLength: 1
        icon:
          type: string
          description: Icon name or URL for the component definition (e.g. 'screen' or 'https://s3/my-component.jpg')
          default: screen
          maxLength: 2024
        titleParameter:
          type: string
          description: |
            The public ID of the parameter whose value should be used to create a display title for this component in the UI.
            The parameter type must support being used as a title parameter for this to work.
          maxLength: 36
          nullable: true
        canBeComposition:
          type: boolean
          description: Whether this component type can be the root of a composition. If false, this component is only used within slots on other components.
          default: false
        parameters:
          type: array
          description: The parameters for this component. Parameters are key-value pairs that can be anything from text values to links to CMS entries.
          items:
            $ref: '#/components/schemas/ComponentDefinitionParameter'
        useTeamPermissions:
          type: boolean
          description: if this component uses team permissions or custom permissions
          default: true
        permissions:
          type: array
          description: Custom role permissions for this component definition
          items:
            $ref: '#/components/schemas/ComponentDefinitionPermission'
        slots:
          type: array
          description: The named slots for this component; placement areas where arrays of other components can be added.
          items:
            $ref: '#/components/schemas/ComponentDefinitionSlot'
        slugSettings:
          $ref: '#/components/schemas/ComponentDefinitionSlugSettings'
        defaults:
          description: Default component instance value
          # workaround:
          # `nullable: true` throws at runtime ("nullable" cannot be used without "type")
          # type: 'null' - part of OpenAPI 3.1 (we use 3.0)
          oneOf:
            - $ref: '#/components/schemas/ComponentInstance'
            - enum: [null]
        variants:
          type: array
          description: Named variants for this component; enables creation of visual variants that use the same parameter data
          items:
            $ref: '#/components/schemas/ComponentDefinitionVariant'
        created:
          type: string
          description: Created date string for this definition (ignored for writes)
          maxLength: 50
        updated:
          type: string
          description: Last modified date string for this definition (ignored for writes)
          maxLength: 50
      additionalProperties: false

    # Component Instance Types
    ComponentParameter:
      type: object
      description: Defines an editable parameter on a component.
      properties:
        value:
          description: The value of the parameter. Any JSON-serializable value is acceptable.
        type:
          type: string
          description: The type of the parameter. Determines how it is displayed when editing, and tells the consumer how to process it.
          minLength: 1
        binding:
          $ref: '#/components/schemas/ComponentParameterBinding'
      required:
        - value
        - type
      additionalProperties: false

    ComponentParameterBinding:
      type: object
      description: Defines a binding from a resource data value to a component parameter value. Do not use.
      deprecated: true
      properties:
        pointer:
          description: |
            A JSON Pointer expression that defines the binding directly to the parameter value
          type: string
          maxLength: 256
        syntax:
          type: string
          description: The syntax of the binding (currently always 'jptr')
          enum:
            - jptr
        required:
          type: boolean
          default: false
          description: |
            Whether the binding should cause an error if it cannot be resolved.
            If true, and the binding cannot be resolved, an error will be returned by the binding process.
            If false, and the binding cannot be resolved, the parameter will be removed from the bound composition.
      required:
        - pointer
        - syntax
      additionalProperties: false

    ComponentInstance:
      type: object
      description: Defines the shape of a component instance served by the composition API.
      required:
        - type
      properties:
        type:
          type: string
          description: Type of the component instance (public_id of its definition)
          maxLength: 36
          minLength: 1
        parameters:
          type: object
          description: Component parameter values for the component instance
          additionalProperties:
            $ref: '#/components/schemas/ComponentParameter'
        variant:
          type: string
          description: Public ID of alternate visual appearance for this component, if any selected
        slots:
          type: object
          description: Slots containing any child components
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ComponentInstance'
        _id:
          type: string
          description: Unique identifier of the component within the composition. This is not set unless specifically requested via `withComponentIDs` API parameter.
          pattern: ^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})$
          minLength: 1
        _pattern:
          type: string
          pattern: ^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})$
          description: Indicates this component instance should be sourced from a pattern library pattern.
        _patternData:
          type: object
          description: |
            Data definitions coming from a pattern resolved for this component. Merged with _data during resolution.
            Means nothing for PUTs; it will be ignored.
          deprecated: true
        _patternError:
          type: string
          description: |
            Describes why the pattern could not be resolved, if a pattern could not be resolved. For PUTs, this is allowed but ignored.
            CYCLIC: A cyclic pattern graph was detected, which could not be resolved because it would cause an infinite loop.
            NOTFOUND: The pattern ID referenced could not be found. It may have been deleted, or not be published yet.
            Means nothing for PUTs; it will be ignored.
          enum:
            - NOTFOUND
            - CYCLIC
      additionalProperties: false
